explain() { 
   open https://explainshell.com/explain\?cmd=$(echo $(fc -ln -1) | node -e 'process.stdout.write(encodeURIComponent(require("fs").readFileSync(0, "utf-8")))') 

 }
nvim :h keytrans()
nvim qq q Q
nvim :echo(keytrans(@q))
nvim :h ex-commands
nvim :h *c_CTRL-F*
nvim map : to q:a
nvim :h <cWORD>
nvim add visual block mapping to s:\%V{text}:{sub}:
nvim :h visual-operators
nvim :h 'cpoptions'
nvim :h 'diffexpr'
nvim :h 'list'
nvim :h 'showbreak'
nvim :h 'showmatch'
nvim :h 'virtualedit'
nvim :h 'wildcharm'
nvim :h 'wildmenu'
nvim :h 'breakindent'
nvim try dotted line indentlines
nvim double click mouse to center cursor

nvim universal ctags
nvim :h ins-completion
nvim :h dict
nvim :h tag-stack
nvim Y doesnt use + reg
nvim make 0 reg equal to + reg
man zshoptions
 SH_FILE_EXPANSION
KEYBOARD_HACK
Note that this does not provide **-style triggers, you will need to enable fzf's zsh completion as well.
=~ saves results?
bindkey ^V is quoted-insert
man zshzle
	world read-command Hello
	recursive-edit
	undo
	select-a-shell-word
	WORDCHARS
man zshall
	MATCH

chsh - <TAB> redraws prompt

 function per-hist-dir-cmd-search() {
    find ~/.directory_history -type f -name history -exec grep --color=always "${1}" {} + | sed -E 's/: [0-9:]+;//' | sed 's/\/history:/:/'
}

autosuggestion go to history for ctrl-o && delte history line from file command
nvim auto :set ft=zsh for files in fpath

nvim tablines hides cursor

autosuggestion swap args pos

find undojoin for zshzle
autopair trigger only when whitespace in left and right

dont create window in nvim when :h

dont run command if history expansion fails

 zle_bracketed_paste contains start and end chars when pasting

syntax highlighting on << EOF broken
syntax highlighting on regex on grep|sed|awk

shorten-path keep slash if substitution is in middle of a path

fix fsh when fzf-tab esc and spelling correction edit

use less -pattern='' for [Docs]

androfecth CPU find

fixnvim SIGHUP
undo on word chunks

pass zsh undohistnto nvim when edit-command-line

add nvim diff swap file

make colors function for easier echoti/terminfo

 zsh-mouse ========
fzf-tab breaks it
prompt breaks it (maybe caused by p10k)
cant scroll
 ==================

ctrl-/ backward-delete-word on /

 man -a # not working

 WORDCHARS toggling from spaces only to path delimeters

 remember Esc-s fix spelling on word

 disable autopair after Ctrl-v (quote-insert)

 ESC-o to go to command flags and options

back to local after accept-line

run-help and which-command clear autosuggestion

ctrl-shift-arrows broken

add customs hooks

key input: Esc Ctrl-Alt-V breaks pasting
key input: Ctrl-v Ctrl-Alt-V breaks pasting

no syntax highlighting when creating func .ex mman() { man -a $@ } 

 fzf-tab glob operators, glob flags and glob qualifiers


# Debugging
 set -x
 export PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'

# ctrl-c wanted behaviour
# comment out command and enter
# command should be saved
# fzf to run and delete commented commands
# behaviour when empty command ???


z fzf-tab on directories


nvim vi" keys doesnt pair correctly

_path_files completion
cd ~/./d/z

make prompt dirs clickable to cd

open files using am
click on command to move cursor

disable spelling correction for _go and others

zstyle ':completion:*' matcher-list '' \
    'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'

zstyle ':completion:*:(argument-rest|files):*' matcher-list '' \
    'm:{[:lower:]-}={[:upper:]_}' \
    'r:|[.,_-]=* r:|=*' \
    'r:|.=* r:|=*'
# zstyle ':completion:*' matcher-list 'b:=*'

 | sed s:$HOME:~:


history remove empty lines
